version: '3.8'

services:
  apache:
    build: ./apache
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - lampnet
    environment:
      - TZ=Asia/Dhaka

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/init-exporter.sql:/docker-entrypoint-initdb.d/init-exporter.sql:ro
    networks:
      - lampnet

  # MySQL exporter
  mysqld-exporter:
    image: prom/mysqld-exporter
    restart: unless-stopped
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    # Use CLI flags and environment for credentials to avoid relying on a mounted
    # .my.cnf file (can cause parsing issues on Windows mounts). The exporter
    # accepts --mysqld.username and MYSQLD_EXPORTER_PASSWORD (env) for the
    # password.
    environment:
      - MYSQLD_EXPORTER_PASSWORD=exporterpass
    command:
      - '--mysqld.username=mysqld_exporter'
      - '--mysqld.address=mysql:3306'
    networks:
      - lampnet

  # Apache exporter
  apache-exporter:
    image: lusotycoon/apache-exporter
    command:
      - '--scrape_uri=http://apache/server-status?auto'
    ports:
      - "9117:9117"
    depends_on:
      - apache
    networks:
      - lampnet

  # Node exporter (system metrics)
  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - lampnet

  # Prometheus
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - mysqld-exporter
      - apache-exporter
      - node-exporter
    networks:
      - lampnet

  # Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - lampnet

  # cAdvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - lampnet


volumes:
  db_data:

networks:
  lampnet:
